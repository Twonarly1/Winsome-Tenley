{"version":3,"sources":["../src/Users/jnsdls/Code/react/src/index.ts","../src/constants/Users/jnsdls/Code/react/src/constants/chain.ts","../src/hooks/Users/jnsdls/Code/react/src/hooks/useSigner.ts","../src/Users/jnsdls/Code/react/src/Provider.tsx","../src/hooks/contracts/Users/jnsdls/Code/react/src/hooks/contracts/useContract.ts","../src/hooks/contracts/Users/jnsdls/Code/react/src/hooks/contracts/useEditionDrop.ts","../src/hooks/contracts/Users/jnsdls/Code/react/src/hooks/contracts/useEdition.ts","../src/hooks/contracts/Users/jnsdls/Code/react/src/hooks/contracts/useNFTDrop.ts","../src/hooks/contracts/Users/jnsdls/Code/react/src/hooks/contracts/useMarketplace.ts","../src/hooks/contracts/Users/jnsdls/Code/react/src/hooks/contracts/useNFTCollection.ts","../src/hooks/contracts/Users/jnsdls/Code/react/src/hooks/contracts/usePack.ts","../src/hooks/contracts/Users/jnsdls/Code/react/src/hooks/contracts/useTokenModule.ts","../src/hooks/contracts/Users/jnsdls/Code/react/src/hooks/contracts/useVoteModule.ts","../src/hooks/contracts/Users/jnsdls/Code/react/src/hooks/contracts/useSplit.ts","../src/hooks/Users/jnsdls/Code/react/src/hooks/useDisconnect.ts","../src/hooks/Users/jnsdls/Code/react/src/hooks/useConnect.ts","../src/hooks/Users/jnsdls/Code/react/src/hooks/useAddress.ts","../src/hooks/Users/jnsdls/Code/react/src/hooks/useReadonlySDK.ts","../src/hooks/connectors/Users/jnsdls/Code/react/src/hooks/connectors/useMetamask.ts","../src/hooks/connectors/Users/jnsdls/Code/react/src/hooks/connectors/useWalletConnect.ts","../src/hooks/connectors/Users/jnsdls/Code/react/src/hooks/connectors/useWalletLink.ts","../src/hooks/Users/jnsdls/Code/react/src/hooks/useChainId.ts","../src/hooks/Users/jnsdls/Code/react/src/hooks/useNetworkMismatch.ts","../src/constants/Users/jnsdls/Code/react/src/constants/ipfs.ts","../src/utils/Users/jnsdls/Code/react/src/utils/ipfs.ts","../src/utils/Users/jnsdls/Code/react/src/utils/media.ts","../src/utils/Users/jnsdls/Code/react/src/utils/react.ts","../src/components/Users/jnsdls/Code/react/src/components/MediaRenderer.tsx","../src/hooks/contracts/Users/jnsdls/Code/react/src/hooks/contracts/useCustomContract.ts","../src/components/Users/jnsdls/Code/react/src/components/NftMedia.tsx"],"sourcesContent":["// contract hooks\nexport * from \"./Provider\";\nexport * from \"./hooks/contracts\";\nexport * from \"./hooks/useDisconnect\";\nexport * from \"./hooks/useConnect\";\nexport * from \"./hooks/useSigner\";\nexport * from \"./hooks/useAddress\";\nexport * from \"./hooks/useReadonlySDK\";\nexport * from \"./hooks/connectors/useMetamask\";\nexport * from \"./hooks/connectors/useWalletConnect\";\nexport * from \"./hooks/connectors/useWalletLink\";\nexport * from \"./hooks/useChainId\";\nexport * from \"./hooks/useNetworkMismatch\";\n\n// re-exports\nexport { defaultChains, defaultL2Chains, useAccount, useNetwork } from \"wagmi\";\nexport { ChainId, IpfsStorage } from \"@thirdweb-dev/sdk\";\n\n// ui components\nexport * from \"./components/MediaRenderer\";\nexport * from \"./components/NftMedia\";\n","import type { Chain as WagmiChain } from \"wagmi\";\n\nexport type Chain = WagmiChain;\n\nconst chain = {\n  mainnet: {\n    id: 1,\n    name: \"Mainnet\",\n    nativeCurrency: {\n      name: \"Ether\",\n      symbol: \"ETH\",\n      decimals: 18,\n    },\n    rpcUrls: [\"https://mainnet.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\"],\n    blockExplorers: [\n      {\n        name: \"Etherscan\",\n        url: \"https://etherscan.io\",\n      },\n    ],\n  },\n  rinkeby: {\n    id: 4,\n    name: \"Rinkeby\",\n    nativeCurrency: {\n      name: \"Rinkeby Ether\",\n      symbol: \"rETH\",\n      decimals: 18,\n    },\n    rpcUrls: [\"https://rinkeby.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\"],\n    blockExplorers: [\n      {\n        name: \"Etherscan\",\n        url: \"https://rinkeby.etherscan.io\",\n      },\n    ],\n    testnet: true,\n  },\n  goerli: {\n    id: 5,\n    name: \"Goerli\",\n    nativeCurrency: {\n      name: \"Goerli Ether\",\n      symbol: \"gETH\",\n      decimals: 18,\n    },\n    rpcUrls: [\"https://goerli.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\"],\n    blockExplorers: [\n      {\n        name: \"Etherscan\",\n        url: \"https://goerli.etherscan.io\",\n      },\n    ],\n    testnet: true,\n  },\n  polygonMainnet: {\n    id: 137,\n    name: \"Polygon Mainnet\",\n    nativeCurrency: {\n      name: \"Matic\",\n      symbol: \"MATIC\",\n      decimals: 18,\n    },\n    rpcUrls: [\n      \"https://polygon-rpc.com\",\n      \"https://rpc-mainnet.matic.network\",\n      \"https://matic-mainnet.chainstacklabs.com\",\n      \"https://rpc-mainnet.maticvigil.com\",\n      \"https://rpc-mainnet.matic.quiknode.pro\",\n      \"https://matic-mainnet-full-rpc.bwarelabs.com\",\n    ],\n    blockExplorers: [\n      {\n        name: \"Polygonscan\",\n        url: \"https://polygonscan.com\",\n      },\n    ],\n  },\n  polygonTestnetMumbai: {\n    id: 80001,\n    name: \"Polygon Testnet Mumbai\",\n    nativeCurrency: {\n      name: \"Matic\",\n      symbol: \"MATIC\",\n      decimals: 18,\n    },\n    rpcUrls: [\n      \"https://matic-mumbai.chainstacklabs.com\",\n      \"https://rpc-mumbai.maticvigil.com\",\n      \"https://matic-testnet-archive-rpc.bwarelabs.com\",\n    ],\n    blockExplorers: [\n      {\n        name: \"Polygonscan\",\n        url: \"https://mumbai.polygonscan.com\",\n      },\n    ],\n    testnet: true,\n  },\n  avalanche: {\n    id: 43114,\n    name: \"Avalanche\",\n    nativeCurrency: {\n      name: \"AVAX\",\n      symbol: \"AVAX\",\n      decimals: 18,\n    },\n    rpcUrls: [\n      \"https://api.avax.network/ext/bc/C/rpc\",\n      \"https://rpc.ankr.com/avalanche\",\n    ],\n    blockExplorers: [\n      {\n        name: \"SnowTrace\",\n        url: \"https://snowtrace.io/\",\n      },\n    ],\n    testnet: false,\n  },\n  // avalancheFuji: {\n  //   id: 43113,\n  //   name: \"Avalanche FUJI\",\n  //   nativeCurrency: {\n  //     name: \"AVAX\",\n  //     symbol: \"AVAX\",\n  //     decimals: 18,\n  //   },\n  //   rpcUrls: [\"https://api.avax-test.network/ext/bc/C/rpc\"],\n  //   blockExplorers: [\n  //     {\n  //       name: \"SnowTrace\",\n  //       url: \"https://testnet.snowtrace.io/\",\n  //     },\n  //   ],\n  //   testnet: true,\n  // },\n  // custom added (non wagmi standard)\n  fantom: {\n    id: 250,\n    name: \"Fantom Opera\",\n    nativeCurrency: {\n      name: \"Fantom\",\n      symbol: \"FTM\",\n      decimals: 18,\n    },\n    rpcUrls: [\"https://rpc.ftm.tools\"],\n    blockExplorerUrls: [\n      {\n        name: \"FTMScan\",\n        url: \"https://ftmscan.com/\",\n      },\n    ],\n    testnet: false,\n  },\n} as const;\nexport const defaultSupportedChains = Object.values(chain);\n\nexport type SupportedChainId = typeof defaultSupportedChains[number][\"id\"];\n\nexport type SupportedChain = SupportedChainId | Chain;\n","import { Signer } from \"ethers\";\nimport { useEffect, useRef } from \"react\";\nimport { useAccount, useNetwork, useSigner as useWagmiSigner } from \"wagmi\";\n\n/**\n *\n * @internal\n */\nexport function useSigner() {\n  const [signer, getSigner] = useWagmiSigner();\n  const [account] = useAccount();\n  const [network] = useNetwork();\n\n  const _getSignerPromise = useRef<ReturnType<typeof getSigner> | null>(null);\n\n  const address = account.data?.address;\n  const chainId = network.data.chain?.id;\n\n  const previousAddress = usePrevious(account.data?.address);\n  const previousChainId = usePrevious(network.data?.chain?.id);\n\n  useEffect(() => {\n    if (address !== previousAddress || chainId !== previousChainId) {\n      if (!_getSignerPromise.current) {\n        return;\n      } else {\n        _getSignerPromise.current = getSigner().finally(() => {\n          _getSignerPromise.current = null;\n        });\n      }\n    }\n  }, [address, chainId, previousAddress, previousChainId]);\n\n  return Signer.isSigner(signer.data) ? signer.data : undefined;\n}\n\nfunction usePrevious<TVal>(value: TVal): TVal | undefined {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef<TVal>();\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import {\n  Chain,\n  SupportedChain,\n  defaultSupportedChains,\n} from \"./constants/chain\";\nimport { useSigner } from \"./hooks/useSigner\";\nimport { IStorage, SDKOptions, ThirdwebSDK } from \"@thirdweb-dev/sdk\";\nimport React, { createContext, useEffect, useMemo } from \"react\";\nimport invariant from \"tiny-invariant\";\nimport {\n  WagmiProvider,\n  ProviderProps as WagmiproviderProps,\n  useProvider,\n} from \"wagmi\";\nimport { InjectedConnector } from \"wagmi/connectors/injected\";\nimport { WalletConnectConnector } from \"wagmi/connectors/walletConnect\";\nimport { WalletLinkConnector } from \"wagmi/connectors/walletLink\";\n\n/**\n * @internal\n */\nexport type InjectedConnectorType =\n  | \"injected\"\n  | \"metamask\"\n  | { name: \"injected\" | \"metamask\"; options?: InjectedConnector[\"options\"] };\n\n/**\n * @internal\n */\nexport type WalletConnectConnectorType =\n  | \"walletConnect\"\n  | { name: \"walletConnect\"; options: WalletConnectConnector[\"options\"] };\n\n/**\n * @internal\n */\nexport type WalletLinkConnectorType =\n  | \"walletLink\"\n  | \"coinbase\"\n  | {\n      name: \"walletLink\" | \"coinbase\";\n      options: WalletLinkConnector[\"options\"];\n    };\n\n/**\n * @internal\n */\nexport type WalletConnector =\n  | InjectedConnectorType\n  | WalletConnectConnectorType\n  | WalletLinkConnectorType;\n\n/**\n * @internal\n */\nexport type ChainRpc<TSupportedChain extends SupportedChain> = Record<\n  TSupportedChain extends Chain ? TSupportedChain[\"id\"] : TSupportedChain,\n  string\n>;\n\n/**\n * the metadata to pass to wallet connection dialog (may show up during the wallet-connection process)\n * @remarks this is only used for wallet connect and wallet link, metamask does not support it\n * @public\n */\nexport interface DAppMetaData {\n  /**\n   * the name of your app\n   */\n  name: string;\n  /**\n   * optional - a description of your app\n   */\n  description?: string;\n  /**\n   * optional - a url that points to a logo (or favicon) of your app\n   */\n  logoUrl?: string;\n  /**\n   * optional - the url where your app is hosted\n   */\n  url?: string;\n  /**\n   * optional - whether to show the connect dialog in darkmode or not\n   */\n  isDarkMode?: boolean;\n}\n\n/**\n * The possible props for the ThirdwebProvider.\n */\nexport interface ThirdwebProviderProps<\n  TSupportedChain extends SupportedChain = SupportedChain,\n> {\n  /**\n   * The {@link SDKOptions | Thirdweb SDK Options} to pass to the thirdweb SDK\n   * comes with sensible defaults\n   */\n  sdkOptions?: SDKOptions;\n  /**\n   * An array of chainIds or {@link Chain} objects that the dApp supports\n   * If not provided, all chains supported by the SDK will be supported by default\n   */\n  supportedChains?: TSupportedChain[];\n  /**\n   * An array of connector types (strings) or wallet connector objects that the dApp supports\n   * If not provided, will default to metamask (injected), wallet connect and walletlink (coinbase wallet) with sensible defaults\n   */\n  walletConnectors?: WalletConnector[];\n  /**\n   * A partial map of chainIds to rpc urls to use for certain chains\n   * If not provided, will default to the rpcUrls of the chain objects for the supported chains\n   */\n  chainRpc?: Partial<ChainRpc<TSupportedChain>>;\n  /**\n   * Metadata to pass to wallet connect and walletlink wallet connect. (Used to show *which* dApp is being connected to in mobile wallets that support it)\n   * Defaults to just the name being passed as `thirdweb powered dApp`.\n   */\n  dAppMeta?: DAppMetaData;\n  /**\n   * The chainId that your dApp is running on.\n   * While this *can* be `undefined` it is required to be passed. Passing `undefined` will cause no SDK to be instantiated.\n   * When passing a chainId, it **must** be part of the `supportedChains` array.\n   */\n  desiredChainId: TSupportedChain extends Chain\n    ? TSupportedChain[\"id\"]\n    : TSupportedChain | undefined;\n\n  /**\n   * The storage interface to use with the sdk.\n   */\n  storageInterface?: IStorage;\n}\n\nconst defaultChainRpc: ThirdwebProviderProps[\"chainRpc\"] = {\n  1: \"https://mainnet.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\",\n  4: \"https://rinkeby.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\",\n  5: \"https://goerli.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\",\n  137: \"https://polygon-rpc.com\",\n  250: \"https://rpc.ftm.tools\",\n  43114: \"https://api.avax.network/ext/bc/C/rpc\",\n  80001: \"https://rpc-mumbai.maticvigil.com\",\n};\n\nconst defaultdAppMeta: DAppMetaData = {\n  name: \"thirdweb powered dApp\",\n};\n\nconst defaultWalletConnectors: Required<\n  ThirdwebProviderProps[\"walletConnectors\"]\n> = [\"metamask\", \"walletConnect\", \"walletLink\"];\n\n/**\n *\n * The `<ThirdwebProvider />` component, you need to wrap your application with this provider to use the thirdweb react sdk.\n *\n *\n *\n * @example\n * Wrap your application with the Provider\n * ```jsx title=\"App.jsx\"\n * import { ThirdwebProvider, ChainId } from \"@thirdweb-dev/react\";\n *\n * const App = () => {\n *   return (\n *     <ThirdwebProvider desiredChainId={ChainId.Mainnet}>\n *       <YourApp />\n *     </ThirdwebProvider>\n *   );\n * };\n```\n *\n * @public\n *\n */\nexport const ThirdwebProvider = <\n  TSupportedChain extends SupportedChain = SupportedChain,\n>({\n  sdkOptions,\n  chainRpc = defaultChainRpc,\n  supportedChains = defaultSupportedChains.map(\n    (c) => c.id,\n  ) as TSupportedChain[],\n  walletConnectors = defaultWalletConnectors,\n  dAppMeta = defaultdAppMeta,\n  desiredChainId,\n  storageInterface,\n  children,\n}: React.PropsWithChildren<ThirdwebProviderProps<TSupportedChain>>) => {\n  // construct the wagmi options\n\n  const _supporrtedChains = useMemo(() => {\n    return supportedChains\n      .map((c) => {\n        if (typeof c === \"number\") {\n          return defaultSupportedChains.find((sc) => sc.id === c);\n        }\n        return c as Chain;\n      })\n      .filter((c) => c !== undefined) as Chain[];\n  }, [supportedChains]);\n\n  const _rpcUrlMap = useMemo(() => {\n    return _supporrtedChains.reduce((prev, curr) => {\n      prev[curr.id] =\n        curr.id in chainRpc\n          ? chainRpc[curr.id as keyof ChainRpc<TSupportedChain>] ||\n            curr.rpcUrls[0]\n          : curr.rpcUrls[0];\n      return prev;\n    }, {} as Record<number, string>);\n  }, [chainRpc, _supporrtedChains]);\n\n  const wagmiProps: WagmiproviderProps = useMemo(() => {\n    const walletConnectClientMeta = {\n      name: dAppMeta.name,\n      url: dAppMeta.url || \"\",\n      icons: [dAppMeta.logoUrl || \"\"],\n      description: dAppMeta.description || \"\",\n    };\n\n    const walletLinkClientMeta = {\n      appName: dAppMeta.name,\n      appLogoUrl: dAppMeta.logoUrl,\n      darkMode: dAppMeta.isDarkMode,\n    };\n\n    return {\n      autoConnect: true,\n      connectorStorageKey: \"tw:provider:connectors\",\n      connectors: ({ chainId }: { chainId?: number }) => {\n        return walletConnectors\n          .map((connector) => {\n            // injected connector\n            if (\n              (typeof connector === \"string\" &&\n                (connector === \"injected\" || connector === \"metamask\")) ||\n              (typeof connector === \"object\" &&\n                (connector.name === \"injected\" ||\n                  connector.name === \"metamask\"))\n            ) {\n              return new InjectedConnector({\n                options:\n                  typeof connector === \"string\"\n                    ? { shimDisconnect: true, shimChainChangedDisconnect: true }\n                    : connector.options,\n                chains: _supporrtedChains,\n              });\n            }\n            if (\n              (typeof connector === \"string\" &&\n                connector === \"walletConnect\") ||\n              (typeof connector === \"object\" &&\n                connector.name === \"walletConnect\")\n            ) {\n              return new WalletConnectConnector({\n                options:\n                  typeof connector === \"string\"\n                    ? {\n                        chainId,\n                        rpc: _rpcUrlMap,\n                        clientMeta: walletConnectClientMeta,\n                        qrcode: true,\n                      }\n                    : {\n                        chainId,\n                        rpc: _rpcUrlMap,\n                        clientMeta: walletConnectClientMeta,\n                        qrcode: true,\n                        ...connector.options,\n                      },\n                chains: _supporrtedChains,\n              });\n            }\n            if (\n              (typeof connector === \"string\" &&\n                (connector === \"coinbase\" || connector === \"walletLink\")) ||\n              (typeof connector === \"object\" &&\n                (connector.name === \"coinbase\" ||\n                  connector.name === \"walletLink\"))\n            ) {\n              const jsonRpcUrl = _rpcUrlMap[chainId || desiredChainId || 1];\n              return new WalletLinkConnector({\n                chains: _supporrtedChains,\n                options:\n                  typeof connector === \"string\"\n                    ? {\n                        ...walletLinkClientMeta,\n                        jsonRpcUrl,\n                      }\n                    : {\n                        ...walletLinkClientMeta,\n                        jsonRpcUrl,\n                        ...connector.options,\n                      },\n              });\n            }\n            return null;\n          })\n          .filter((c) => c !== null);\n      },\n    } as WagmiproviderProps;\n  }, [walletConnectors, _supporrtedChains, dAppMeta]);\n\n  const defaultSdkReadUrl =\n    _rpcUrlMap[(desiredChainId || -1) as keyof typeof _rpcUrlMap];\n\n  const sdkOptionsWithDefaults = useMemo(() => {\n    const opts: SDKOptions = sdkOptions;\n    return {\n      ...opts,\n      readonlySettings: {\n        ...(opts?.readonlySettings || {}),\n        rpcUrl: opts?.readonlySettings?.rpcUrl\n          ? opts.readonlySettings.rpcUrl\n          : defaultSdkReadUrl,\n      },\n    };\n  }, [sdkOptions, defaultSdkReadUrl]);\n\n  return (\n    <WagmiProvider {...wagmiProps}>\n      <ThirdwebSDKProvider\n        desiredChainId={desiredChainId}\n        sdkOptions={sdkOptionsWithDefaults}\n        storageInterface={storageInterface}\n      >\n        {children}\n      </ThirdwebSDKProvider>\n    </WagmiProvider>\n  );\n};\n\ninterface SDKContext {\n  sdk?: ThirdwebSDK;\n  _inProvider?: true;\n  desiredChainId: number;\n}\n\nconst ThirdwebSDKContext = createContext<SDKContext>({ desiredChainId: -1 });\n\nconst ThirdwebSDKProvider: React.FC<\n  Pick<\n    ThirdwebProviderProps,\n    \"desiredChainId\" | \"sdkOptions\" | \"storageInterface\"\n  >\n> = ({ sdkOptions, desiredChainId, storageInterface, children }) => {\n  const provider = useProvider();\n  const signer = useSigner();\n\n  const sdk = useMemo(() => {\n    if (!desiredChainId || typeof window === \"undefined\") {\n      return undefined;\n    }\n    const _sdk = new ThirdwebSDK(provider, sdkOptions, storageInterface);\n    (_sdk as any)._chainId = desiredChainId;\n    return _sdk;\n  }, [provider, sdkOptions, storageInterface, desiredChainId]);\n\n  useEffect(() => {\n    if (signer && sdk && (sdk as any)._chainId === desiredChainId) {\n      sdk.updateSignerOrProvider(signer);\n    }\n  }, [signer, sdk, desiredChainId]);\n\n  const ctxValue = useMemo(\n    () => ({\n      sdk,\n      desiredChainId: desiredChainId || -1,\n      _inProvider: true as const,\n    }),\n    [sdk],\n  );\n\n  return (\n    <ThirdwebSDKContext.Provider value={ctxValue}>\n      {children}\n    </ThirdwebSDKContext.Provider>\n  );\n};\n\n/**\n *\n * @returns {@link ThirdwebSDK}\n * @internal\n */\nexport function useSDK(): ThirdwebSDK | undefined {\n  const ctx = React.useContext(ThirdwebSDKContext);\n  invariant(\n    ctx._inProvider,\n    \"useSDK must be called from within a ThirdwebProvider, did you forget to wrap your app in a <ThirdwebProvider />?\",\n  );\n  return ctx.sdk;\n}\n\n/**\n *\n * @internal\n */\nexport function useDesiredChainId(): number {\n  const ctx = React.useContext(ThirdwebSDKContext);\n  invariant(\n    ctx._inProvider,\n    \"useDesiredChainId must be called from within a ThirdwebProvider, did you forget to wrap your app in a <ThirdwebProvider />?\",\n  );\n  return ctx.desiredChainId;\n}\n","import { useSDK } from \"../../Provider\";\nimport { ContractForContractType, ContractType } from \"@thirdweb-dev/sdk\";\n\n/**\n * @internal\n * @param contractType - the module type\n * @param contractAddress - the module address\n * @returns the instance of the module for the given type and address\n */\nexport function useContract<TContractType extends ContractType>(\n  contractType: TContractType,\n  contractAddress?: string,\n): ContractForContractType<TContractType> | undefined {\n  const sdk = useSDK();\n  if (!sdk || !contractAddress) {\n    return undefined;\n  }\n  return sdk.getContract(contractAddress, contractType);\n}\n","import { useContract } from \"./useContract\";\nimport { EditionDrop } from \"@thirdweb-dev/sdk\";\n\n/**\n * Returns a Edition Drop contract instance\n * @param contractAddress - the address of the Edition Drop contract, found in your thirdweb dashboard\n * @public\n */\nexport function useEditionDrop(\n  contractAddress?: string,\n): EditionDrop | undefined {\n  return useContract(\"edition-drop\", contractAddress);\n}\n","import { useContract } from \"./useContract\";\nimport { Edition } from \"@thirdweb-dev/sdk\";\n\n/**\n * Returns a Edition contract instance\n * @param contractAddress - the address of the Edition contract, found in your thirdweb dashboard\n * @public\n */\nexport function useEdition(contractAddress?: string): Edition | undefined {\n  return useContract(\"edition\", contractAddress);\n}\n","import { useContract } from \"./useContract\";\nimport { NFTDrop } from \"@thirdweb-dev/sdk\";\n\n/**\n * Returns a NFT Drop contract instance\n * @param contractAddress - the address of the NFT Drop contract, found in your thirdweb dashboard\n * @public\n */\nexport function useNFTDrop(contractAddress?: string): NFTDrop | undefined {\n  return useContract(\"nft-drop\", contractAddress);\n}\n","import { useContract } from \"./useContract\";\nimport { Marketplace } from \"@thirdweb-dev/sdk\";\n\n/**\n * Returns a Marketplace contract instance\n * @param contractAddress - the address of the Marketplace contract, found in your thirdweb dashboard\n * @public\n */\nexport function useMarketplace(\n  contractAddress?: string,\n): Marketplace | undefined {\n  return useContract(\"marketplace\", contractAddress);\n}\n","import { useContract } from \"./useContract\";\nimport { NFTCollection } from \"@thirdweb-dev/sdk\";\n\n/**\n * Returns a NFT Collection contract instance\n * @param contractAddress - the address of the NFT Collection contract, found in your thirdweb dashboard\n * @public\n */\nexport function useNFTCollection(\n  contractAddress?: string,\n): NFTCollection | undefined {\n  return useContract(\"nft-collection\", contractAddress);\n}\n","import { useContract } from \"./useContract\";\nimport { Pack } from \"@thirdweb-dev/sdk\";\n\n/**\n * Returns a Pack contract instance\n * @param contractAddress - the address of the Pack contract, found in your thirdweb dashboard\n * @public\n */\nexport function usePack(contractAddress?: string): Pack | undefined {\n  return useContract(\"pack\", contractAddress);\n}\n","import { useContract } from \"./useContract\";\nimport { Token } from \"@thirdweb-dev/sdk\";\n\n/**\n * Returns a Token contract instance\n * @param contractAddress - the address of the Token contract, found in your thirdweb dashboard\n * @public\n */\nexport function useToken(contractAddress?: string): Token | undefined {\n  return useContract(\"token\", contractAddress);\n}\n","import { useContract } from \"./useContract\";\nimport { Vote } from \"@thirdweb-dev/sdk\";\n\n/**\n * Returns a Vote contract instance\n * @param contractAddress - the address of the Vote contract, found in your thirdweb dashboard\n * @public\n */\nexport function useVote(contractAddress?: string): Vote | undefined {\n  return useContract(\"vote\", contractAddress);\n}\n","import { useContract } from \"./useContract\";\nimport { Split } from \"@thirdweb-dev/sdk\";\n\n/**\n * Returns a Split contract instance\n * @param contractAddress - the address of the Split contract, found in your thirdweb dashboard\n * @public\n */\nexport function useSplit(contractAddress?: string): Split | undefined {\n  return useContract(\"split\", contractAddress);\n}\n","import { useAccount } from \"wagmi\";\n\n/**\n *\n * @returns a function to call to disconnect the connected wallet\n * @public\n */\nexport function useDisconnect() {\n  const [, disconnect] = useAccount();\n\n  return disconnect;\n}\n","import { useConnect as useWagmiConnect } from \"wagmi\";\n\n/**\n * for now just re-exported\n * @internal\n */\nexport function useConnect() {\n  return useWagmiConnect();\n}\n","import { useAccount } from \"wagmi\";\n\n/**\n *\n * @returns the address of the connected wallet\n * @public\n */\nexport function useAddress(): string | undefined {\n  const [account] = useAccount();\n  return account.data?.address;\n}\n","import { IStorage, SDKOptions, ThirdwebSDK } from \"@thirdweb-dev/sdk\";\nimport { useMemo } from \"react\";\n\n/**\n * @internal\n */\nexport function useReadonlySDK(\n  readonlyRpcUrl: string,\n  sdkOptions: SDKOptions,\n  storageInterface?: IStorage,\n): ThirdwebSDK {\n  return useMemo(() => {\n    return new ThirdwebSDK(\n      readonlyRpcUrl,\n      {\n        ...sdkOptions,\n        readonlySettings: {\n          ...sdkOptions?.readonlySettings,\n          rpcUrl: readonlyRpcUrl,\n        },\n      },\n      storageInterface,\n    );\n  }, [readonlyRpcUrl, sdkOptions]);\n}\n","import { useConnect } from \"../useConnect\";\nimport invariant from \"tiny-invariant\";\n\n/**\n * Convienience hook for connecting to a metamask (or any injected) wallet\n * @returns a function that will prompt the user to connect their metamask wallet\n * @public\n */\nexport function useMetamask() {\n  const [connectors, connect] = useConnect();\n  if (connectors.loading) {\n    return () => Promise.reject(\"Metamask connector not ready to be used, yet\");\n  }\n  const connector = connectors.data.connectors.find((c) => c.id === \"injected\");\n  invariant(\n    connector,\n    \"Metamask connector not found, please make sure it is provided to your <ThirdwebProvider />\",\n  );\n\n  return () => connect(connector);\n}\n","import { useConnect } from \"../useConnect\";\nimport invariant from \"tiny-invariant\";\n\n/**\n * Convienience hook for connecting to a wallet via WalletConnect\n * @returns a function that will prompt the user to connect their wallet via WalletConnect\n * @public\n */\nexport function useWalletConnect() {\n  const [connectors, connect] = useConnect();\n  if (connectors.loading) {\n    return () =>\n      Promise.reject(\"WalletConnect connector not ready to be used, yet\");\n  }\n  const connector = connectors.data.connectors.find(\n    (c) => c.id === \"walletConnect\",\n  );\n  invariant(\n    connector,\n    \"WalletConnect connector not found, please make sure it is provided to your <ThirdwebProvider />\",\n  );\n\n  return () => connect(connector);\n}\n","import { useConnect } from \"../useConnect\";\nimport invariant from \"tiny-invariant\";\n\n/**\n * Convienience hook for connecting to a wallet via WalletLink (coinbase wallet)\n * @returns a function that will prompt the user to connect their wallet via WalletLink (coinbase wallet)\n * @internal\n */\nexport function useWalletLink() {\n  const [connectors, connect] = useConnect();\n  if (connectors.loading) {\n    return () =>\n      Promise.reject(\n        \"WalletLink / Coinbase connector not ready to be used, yet\",\n      );\n  }\n  const connector = connectors.data.connectors.find(\n    (c) => c.id === \"walletLink\",\n  );\n  invariant(\n    connector,\n    \"WalletLink / Coinbase connector not found, please make sure it is provided to your <ThirdwebProvider />\",\n  );\n\n  return () => connect(connector);\n}\n\n/**\n * Convienience hook for connecting to a wallet via Coinbase Wallet\n * @returns a function that will prompt the user to connect their wallet via Coinbase Wallet\n * @public\n */\nexport function useCoinbaseWallet() {\n  return useWalletLink();\n}\n","import { useNetwork } from \"wagmi\";\n\n/**\n *\n * @returns the chainId of the connected network\n * @public\n */\nexport function useChainId(): number | undefined {\n  return useNetwork()[\"0\"].data.chain?.id;\n}\n","import { useDesiredChainId } from \"../Provider\";\nimport { useChainId } from \"./useChainId\";\n\n/**\n *\n * @returns `true` if the chainId of the connected wallet is different from the desired chainId passed into <ThirdwebProvider />\n * @returns `false` if the chainId of the wallet is the same as the desired chainId passed into <ThirdwebProvider />\n * @public\n */\nexport function useNetworkMismatch() {\n  const desiredChainId = useDesiredChainId();\n  const activeChainId = useChainId();\n\n  if (desiredChainId === -1) {\n    console.warn(\n      \"useNetworkMismatch: desiredChainId is -1, this is not a valid chainId, please provide a valid chainId to the <ThirdwebProvider />\",\n    );\n    return false;\n  }\n  if (!activeChainId) {\n    console.debug(\n      \"useNetworkMismatch: activeChainId is undefined, this means there is no wallet connected yet\",\n    );\n    return false;\n  }\n  // check if the chainIds are different\n  return desiredChainId !== activeChainId;\n}\n","export const DEFAULT_IPFS_GATEWAY = \"https://gateway.ipfscdn.io/ipfs/\";\n\nexport interface IPFSResolverOptions {\n  gatewayUrl: string;\n}\n\nexport const DEFAULT_IPFS_RESOLVER_OPTIONS: IPFSResolverOptions = {\n  gatewayUrl: DEFAULT_IPFS_GATEWAY,\n};\n","import { DEFAULT_IPFS_RESOLVER_OPTIONS } from \"../constants/ipfs\";\nimport mime from \"mime/lite\";\n\nexport function resolveIpfsUri(\n  uri?: string,\n  options = DEFAULT_IPFS_RESOLVER_OPTIONS,\n) {\n  if (!uri) {\n    return undefined;\n  }\n  if (uri.startsWith(\"ipfs://\")) {\n    return uri.replace(\"ipfs://\", options.gatewayUrl);\n  }\n  return uri;\n}\n\nexport async function resolveMimeType(url?: string) {\n  if (!url) {\n    return undefined;\n  }\n  const mimeType = mime.getType(url);\n  if (mimeType) {\n    return mimeType;\n  }\n\n  const res = await fetch(url, {\n    method: \"HEAD\",\n  });\n  if (res.ok && res.headers.has(\"content-type\")) {\n    return res.headers.get(\"content-type\") ?? undefined;\n  }\n  // we failed to resolve the mime type, return null\n  return undefined;\n}\n","let video: HTMLVideoElement;\n\nfunction supportsVideoType(mimeType?: string) {\n  if (\n    typeof window === \"undefined\" ||\n    !mimeType ||\n    !mimeType.startsWith(\"video/\")\n  ) {\n    return \"\";\n  }\n\n  if (!video) {\n    video = document.createElement(\"video\");\n  }\n\n  return video.canPlayType(mimeType);\n}\n\nexport function shouldRenderVideoTag(mimeType?: string) {\n  return !!supportsVideoType(mimeType);\n}\n\nlet audio: HTMLAudioElement;\n\nfunction supportsAudioType(mimeType?: string) {\n  if (\n    typeof window === \"undefined\" ||\n    !mimeType ||\n    !mimeType.startsWith(\"audio/\")\n  ) {\n    return \"\";\n  }\n\n  if (!audio) {\n    audio = document.createElement(\"audio\");\n  }\n\n  return audio.canPlayType(mimeType);\n}\n\nexport function shouldRenderAudioTag(mimeType?: string) {\n  return !!supportsAudioType(mimeType);\n}\n","export function mergeRefs<T = any>(\n  refs: Array<React.MutableRefObject<T> | React.LegacyRef<T>>,\n): React.RefCallback<T> {\n  return (value) => {\n    refs.forEach((ref) => {\n      if (typeof ref === \"function\") {\n        ref(value);\n        // eslint-disable-next-line eqeqeq\n      } else if (ref != null) {\n        (ref as React.MutableRefObject<T | null>).current = value;\n      }\n    });\n  };\n}\n","import { resolveIpfsUri, resolveMimeType } from \"../utils/ipfs\";\nimport { shouldRenderAudioTag, shouldRenderVideoTag } from \"../utils/media\";\nimport { mergeRefs } from \"../utils/react\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport useDimensions from \"react-cool-dimensions\";\nimport { AiOutlineFileUnknown } from \"react-icons/ai\";\nimport { FaRegFileAudio } from \"react-icons/fa\";\nimport { IoPauseSharp, IoPlaySharp } from \"react-icons/io5\";\nimport useSWRImmutable from \"swr/immutable\";\n\nexport interface SharedMediaProps {\n  className?: string;\n  style?: React.CSSProperties;\n  width?: HTMLIFrameElement[\"width\"];\n  height?: HTMLIFrameElement[\"height\"];\n  /**\n   * Require user interaction to play the media. (default false)\n   */\n  requireInteraction?: boolean;\n  /**\n   * Show the media controls (where applicable) (default false)\n   */\n  controls?: HTMLVideoElement[\"controls\"];\n}\n\n/**\n *\n * The props for the {@link MediaRenderer} component.\n * @public\n */\nexport interface MediaRendererProps extends SharedMediaProps {\n  /**\n   * The media source uri.\n   */\n  src?: string;\n  /**\n   * The alt text for the media.\n   */\n  alt?: string;\n  /**\n   * The media poster image uri. (if applicable)\n   */\n  poster?: string;\n}\n\ninterface PlayButtonProps {\n  onClick: () => void;\n  isPlaying: boolean;\n}\n\nconst PlayButton: React.VFC<PlayButtonProps> = ({ onClick, isPlaying }) => {\n  const [isHovering, setIsHovering] = useState(false);\n  const onMouseEnter = () => setIsHovering(true);\n  const onMouseLeave = () => setIsHovering(false);\n  const onMouseDown = () => setIsHovering(false);\n  const onMouseUp = () => setIsHovering(true);\n  return (\n    <button\n      style={{\n        position: \"absolute\",\n        bottom: 0,\n        right: 0,\n        transform: \"translate(-25%, -25%)\",\n        maxWidth: \"32px\",\n        width: \"8%\",\n        minWidth: \"24px\",\n        aspectRatio: \"1\",\n        zIndex: 3,\n        backgroundColor: \"#fff\",\n        color: \"rgb(138, 147, 155)\",\n        display: \"grid\",\n        placeItems: \"center\",\n        borderRadius: \"50%\",\n        border: \"1px solid rgb(229, 232, 235)\",\n        cursor: \"pointer\",\n        ...(isHovering\n          ? {\n              color: \"rgb(53, 56, 64)\",\n              boxShadow: \"rgb(4 17 29 / 25%) 0px 0px 8px 0px\",\n            }\n          : {}),\n      }}\n      onClick={onClick}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      onMouseDown={onMouseDown}\n      onMouseUp={onMouseUp}\n    >\n      {!isPlaying ? (\n        <IoPlaySharp style={{ width: \"66%\", height: \"66%\" }} />\n      ) : (\n        <IoPauseSharp style={{ width: \"66%\", height: \"66%\" }} />\n      )}\n    </button>\n  );\n};\n\nconst VideoPlayer = React.forwardRef<HTMLVideoElement, MediaRendererProps>(\n  (\n    {\n      src,\n      alt,\n      poster,\n      requireInteraction,\n      children,\n      style,\n      width,\n      height,\n      controls,\n      ...restProps\n    },\n    ref,\n  ) => {\n    const videoRef = useRef<HTMLVideoElement>(null);\n    const [playing, setPlaying] = useState(!requireInteraction);\n    const [muted, setMuted] = useState(true);\n\n    useEffect(() => {\n      if (videoRef.current) {\n        if (playing) {\n          videoRef.current.play();\n        } else {\n          videoRef.current.pause();\n          videoRef.current.currentTime = 0;\n        }\n      }\n    }, [playing]);\n\n    return (\n      <div style={{ position: \"relative\", ...style }} {...restProps}>\n        <video\n          ref={mergeRefs([videoRef, ref])}\n          src={src}\n          poster={poster}\n          loop\n          playsInline\n          muted={muted}\n          preload={poster ? \"metadata\" : \"auto\"}\n          onCanPlay={() => {\n            if (playing) {\n              videoRef.current?.play();\n            }\n          }}\n          width={width}\n          height={height}\n          controls={controls}\n          style={{\n            height: \"100%\",\n            width: \"100%\",\n            objectFit: \"contain\",\n            zIndex: 1,\n            transition: \"opacity .5s\",\n            opacity: !poster ? 1 : playing ? 1 : 0,\n          }}\n        />\n        {poster && (\n          <img\n            src={poster}\n            style={{\n              objectFit: \"contain\",\n              pointerEvents: \"none\",\n              position: \"absolute\",\n              width: \"100%\",\n              height: \"100%\",\n              zIndex: 2,\n              transition: \"opacity .5s\",\n              opacity: playing ? 0 : 1,\n              top: 0,\n              left: 0,\n              right: 0,\n              bottom: 0,\n            }}\n          />\n        )}\n        <PlayButton\n          onClick={() => {\n            setPlaying((prev) => !prev);\n            setMuted(false);\n          }}\n          isPlaying={playing}\n        />\n      </div>\n    );\n  },\n);\n\nconst AudioPlayer = React.forwardRef<HTMLAudioElement, MediaRendererProps>(\n  (\n    {\n      src,\n      alt,\n      poster,\n      requireInteraction,\n      children,\n      style,\n      height,\n      width,\n      controls,\n      ...restProps\n    },\n    ref,\n  ) => {\n    const audioRef = useRef<HTMLAudioElement>(null);\n    const [playing, setPlaying] = useState(false);\n    const [muted, setMuted] = useState(true);\n\n    useEffect(() => {\n      if (audioRef.current) {\n        if (playing) {\n          audioRef.current.play();\n        } else {\n          audioRef.current.pause();\n          audioRef.current.currentTime = 0;\n        }\n      }\n    }, [playing]);\n\n    return (\n      <div style={{ position: \"relative\", ...style }} {...restProps}>\n        {poster ? (\n          <img\n            height={height}\n            width={width}\n            src={poster}\n            style={{\n              height: \"100%\",\n              width: \"100%\",\n              pointerEvents: \"none\",\n              objectFit: \"contain\",\n            }}\n          />\n        ) : (\n          <div\n            style={{\n              width: \"100%\",\n              height: \"100%\",\n              display: \"grid\",\n              placeItems: \"center\",\n              pointerEvents: \"none\",\n              backgroundColor: \"#fff\",\n              color: \"rgb(138, 147, 155)\",\n            }}\n          >\n            <FaRegFileAudio style={{ height: \"64px\", width: \"64px\" }} />\n          </div>\n        )}\n\n        <PlayButton\n          onClick={() => {\n            setPlaying((prev) => !prev);\n            setMuted(false);\n          }}\n          isPlaying={playing}\n        />\n        <audio\n          ref={mergeRefs([audioRef, ref])}\n          src={src}\n          loop\n          playsInline\n          muted={muted}\n          style={{\n            position: \"absolute\",\n            opacity: 0,\n            pointerEvents: \"none\",\n            zIndex: -1,\n            visibility: \"hidden\",\n          }}\n        />\n      </div>\n    );\n  },\n);\n\nconst IframePlayer = React.forwardRef<HTMLIFrameElement, MediaRendererProps>(\n  (\n    {\n      src,\n      alt,\n      poster,\n      requireInteraction,\n      children,\n      style,\n      height,\n      width,\n      controls,\n      ...restProps\n    },\n    ref,\n  ) => {\n    const { observe, width: elWidth } = useDimensions<HTMLDivElement | null>();\n    const [playing, setPlaying] = useState(!requireInteraction);\n\n    if (elWidth < 300) {\n      return (\n        <div ref={observe}>\n          <LinkPlayer style={style} src={src} alt={alt} {...restProps} />\n        </div>\n      );\n    }\n\n    return (\n      <div\n        style={{ position: \"relative\", ...style }}\n        {...restProps}\n        ref={observe}\n      >\n        <iframe\n          src={playing ? src : undefined}\n          ref={ref}\n          style={{\n            objectFit: \"contain\",\n            zIndex: 1,\n            height: \"100%\",\n            width: \"100%\",\n            transition: \"opacity .5s\",\n            opacity: !poster ? 1 : playing ? 1 : 0,\n          }}\n        />\n        {poster && (\n          <img\n            src={poster}\n            style={{\n              objectFit: \"contain\",\n              pointerEvents: \"none\",\n              position: \"absolute\",\n              width: \"100%\",\n              height: \"100%\",\n              zIndex: 2,\n              transition: \"opacity .5s\",\n              opacity: playing ? 0 : 1,\n              top: 0,\n              left: 0,\n              right: 0,\n              bottom: 0,\n            }}\n          />\n        )}\n        <PlayButton\n          onClick={() => {\n            setPlaying((prev) => !prev);\n          }}\n          isPlaying={playing}\n        />\n      </div>\n    );\n  },\n);\n\nconst LinkPlayer = React.forwardRef<HTMLAnchorElement, MediaRendererProps>(\n  (\n    {\n      src,\n      alt,\n      poster,\n      requireInteraction,\n      children,\n      style,\n      height,\n      width,\n      controls,\n      ...restProps\n    },\n    ref,\n  ) => {\n    return (\n      <div style={{ position: \"relative\", ...style }} {...restProps}>\n        <div\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            display: \"grid\",\n            placeItems: \"center\",\n            backgroundColor: \"#fff\",\n            color: \"rgb(138, 147, 155)\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              gap: \"8px\",\n              alignItems: \"center\",\n              flexWrap: \"nowrap\",\n            }}\n          >\n            <AiOutlineFileUnknown\n              style={{\n                maxWidth: \"128px\",\n                minWidth: \"48px\",\n                width: \"50%\",\n                aspectRatio: \"1\",\n              }}\n            />\n            <a\n              rel=\"noopener noreferrer\"\n              style={{\n                textDecoration: \"underline\",\n                color: \"rgb(138, 147, 155)\",\n              }}\n              href={src}\n              target=\"_blank\"\n              ref={ref as unknown as React.LegacyRef<HTMLAnchorElement>}\n            >\n              {alt || \"File\"}\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  },\n);\n\n/**\n * A component that renders media based on the format of the media type.\n * Handles most media types including image, audio, video, and html files.\n * Falls back to a external link if the media type is not supported.\n *\n * props: {@link MediaRendererProps}\n *\n * @example\n * Render a video hosted on ipfs\n * ```jsx\n * const Component = () => {\n *   return <MediaRenderer\n *     src=\"ipfs://Qmb9ZV5yznE4C4YvyJe8DVFv1LSVkebdekY6HjLVaKmHZi\"\n *     alt=\"A mp4 video\"\n *   />\n * }\n * ```\n */\nexport const MediaRenderer = React.forwardRef<\n  HTMLMediaElement,\n  MediaRendererProps\n>(\n  (\n    {\n      children,\n      src,\n      poster,\n      alt,\n      requireInteraction = false,\n      style,\n      ...restProps\n    },\n    ref,\n  ) => {\n    const mergedStyle: React.CSSProperties = { objectFit: \"contain\", ...style };\n    const videoOrImageSrc = useResolvedMediaType(src);\n    const possiblePosterSrc = useResolvedMediaType(poster);\n    if (!videoOrImageSrc.mimeType) {\n      return (\n        <img\n          style={mergedStyle}\n          {...restProps}\n          ref={ref as unknown as React.LegacyRef<HTMLImageElement>}\n        />\n      );\n    } else if (videoOrImageSrc.mimeType === \"text/html\") {\n      return (\n        <IframePlayer\n          style={mergedStyle}\n          src={videoOrImageSrc.url}\n          poster={possiblePosterSrc.url}\n          requireInteraction={requireInteraction}\n          {...restProps}\n        />\n      );\n    } else if (shouldRenderVideoTag(videoOrImageSrc.mimeType)) {\n      return (\n        <VideoPlayer\n          style={mergedStyle}\n          src={videoOrImageSrc.url}\n          poster={possiblePosterSrc.url}\n          requireInteraction={requireInteraction}\n          {...restProps}\n        />\n      );\n    } else if (shouldRenderAudioTag(videoOrImageSrc.mimeType)) {\n      return (\n        <AudioPlayer\n          style={mergedStyle}\n          src={videoOrImageSrc.url}\n          poster={possiblePosterSrc.url}\n          requireInteraction={requireInteraction}\n          {...restProps}\n        />\n      );\n    } else if (videoOrImageSrc.mimeType.startsWith(\"image/\")) {\n      return (\n        <img\n          style={mergedStyle}\n          src={videoOrImageSrc.url}\n          alt={alt}\n          ref={ref as unknown as React.LegacyRef<HTMLImageElement>}\n          {...restProps}\n        />\n      );\n    }\n    return (\n      <LinkPlayer\n        style={mergedStyle}\n        src={videoOrImageSrc.url}\n        alt={alt}\n        ref={ref as unknown as React.Ref<HTMLAnchorElement>}\n        {...restProps}\n      />\n    );\n  },\n);\n\nexport interface MediaType {\n  url?: string;\n  mimeType?: string;\n}\n\n/**\n * @param uri - the uri to resolve (can be a url or a ipfs://\\<cid\\>)\n * @returns the fully resolved url + mime type of the media\n *\n * @example\n * Usage with fully formed url:\n * ```jsx\n * const Component = () => {\n *   const resolved = useResolvedMediaType(\"https://example.com/video.mp4\");\n *   console.log(\"mime type\", resolved.data.mimeType);\n *   console.log(\"url\", resolved.data.url);\n *   return null;\n * }\n * ```\n *\n * Usage with ipfs cid:\n * ```jsx\n * const Component = () => {\n *   const resolved = useResolvedMediaType(\"ipfs://QmWATWQ7fVPP2EFGu71UkfnqhYXDYH566qy47CnJDgvsd\");\n *   console.log(\"mime type\", resolved.data.mimeType);\n *   console.log(\"url\", resolved.data.url);\n *   return null;\n * }\n * ```\n */\nexport function useResolvedMediaType(uri?: string) {\n  const resolvedUrl = useMemo(() => resolveIpfsUri(uri), [uri]);\n  const resolvedMimType = useSWRImmutable(\n    resolvedUrl,\n    () => resolveMimeType(resolvedUrl),\n    {\n      isPaused: () => !resolvedUrl,\n    },\n  );\n\n  return {\n    url: resolvedUrl,\n    mimeType: resolvedMimType.data,\n  };\n}\n","import { useSDK } from \"../../Provider\";\nimport { ChainId } from \"@thirdweb-dev/sdk\";\nimport useSWRImmutable from \"swr/immutable\";\n\n/**\n * @internal\n * @param contractAddress - the contract address\n * @param abi - the contract abi\n * @returns the instance of the module for the given type and address\n */\nexport function useUnstableCustomContract(\n  contractAddress?: string,\n  chainId?: ChainId,\n  abi: any = undefined,\n) {\n  const sdk = useSDK();\n  return useSWRImmutable(\n    `contract.${chainId}.${contractAddress}`,\n    () =>\n      sdk && \"unstable_getCustomContract\" in sdk && contractAddress\n        ? sdk.unstable_getCustomContract(contractAddress, abi)\n        : undefined,\n    { isPaused: () => !sdk || !contractAddress },\n  );\n}\n","import { useDesiredChainId } from \"../Provider\";\nimport { useUnstableCustomContract } from \"../hooks/contracts/useCustomContract\";\nimport { MediaRenderer, SharedMediaProps } from \"./MediaRenderer\";\nimport { BigNumberish } from \"@ethersproject/bignumber\";\nimport { NFTMetadata, NFTMetadataOwner } from \"@thirdweb-dev/sdk\";\nimport React from \"react\";\nimport useSWRImmutable from \"swr/immutable\";\n\nexport interface NftMediaProps extends SharedMediaProps {\n  contractAddress: string;\n  tokenId: BigNumberish;\n}\n\n/**\n * @internal\n */\nexport const Unstable_NftMedia = React.forwardRef<\n  HTMLMediaElement,\n  NftMediaProps\n>(({ children, contractAddress, tokenId, ...restProps }, ref) => {\n  const tokenMetadata = useNftTokenMetadata(contractAddress, tokenId);\n  return (\n    <MediaRenderer\n      src={\n        tokenMetadata.data?.metadata.animation_url ||\n        tokenMetadata.data?.metadata?.image\n      }\n      poster={tokenMetadata.data?.metadata.image}\n      alt={tokenMetadata.data?.metadata?.name}\n      ref={ref}\n      {...restProps}\n    />\n  );\n});\n\n/**\n *\n * @param contractAddress - the contract address of the NFT contract\n * @param tokenId - the tokenId of the nft\n * @returns the metadata of the nft\n * @internal\n */\nexport function useNftTokenMetadata(\n  contractAddress: string,\n  tokenId: BigNumberish,\n) {\n  const desiredChainId = useDesiredChainId();\n\n  const contract = useUnstableCustomContract(contractAddress, desiredChainId);\n\n  return useSWRImmutable(\n    contract.data\n      ? `token-metadata.${desiredChainId}.${contractAddress}.${tokenId}`\n      : \"token-medata.loading\",\n    () =>\n      contract.data && \"get\" in contract.data\n        ? (contract.data.get(tokenId) as unknown as NFTMetadataOwner)\n        : undefined,\n    {\n      isPaused: () => !contract.data || !(\"get\" in contract.data),\n    },\n  );\n}\n\n/**\n * The props for the {@link ThirdwebNftMedia} component.\n */\nexport interface ThirdwebNftMediaProps extends SharedMediaProps {\n  /**\n   * The NFT metadata of the NFT returned by the thirdweb sdk.\n   */\n  metadata: NFTMetadata;\n}\n\n/**\n * Render a nft based on the common metadata returned by the thirdweb sdk.\n */\nexport const ThirdwebNftMedia = React.forwardRef<\n  HTMLMediaElement,\n  ThirdwebNftMediaProps\n>(({ metadata, ...props }, ref) => {\n  return (\n    <MediaRenderer\n      src={metadata.animation_url || metadata.image}\n      poster={metadata.image}\n      alt={metadata.name}\n      ref={ref}\n      {...props}\n    />\n  );\n});\n"],"mappings":"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","names":[]}